body {
  font-family: Arial, Helvetica, sans-serif;
}

.para,
.small-para {
  color: hsl(0, 0%, 0%);
  font-weight: 800;
}

p.small-para {
  font-size: 14px;
  font-weight: 800;
}

/*
other solutions: 

move .small-para rule and place it under the .para selector to take advantage of the rule order since both selectors have the same specifity

another options is by chaining selectors giving this rule a higher specifity

p.small-para{
}

*/

.para {
  font-size: 22px;
}

#confirm-button {
  background: green;
  color: white;
  font-weight: bold;
} 

/* 
other solutions:

move .confirm rule below the .button rule or use the .button.confirm selector to avoid moving it

.button.confirm {
}

*/


.button {
  background-color: rgb(255, 255, 255);
  color: rgb(0, 0, 0);
  font-size: 20px;
}

/* 
other solutions:

For the following rule we first removed it from its original position in the file: 

  .child {
    color: rgb(0, 0, 0);
    font-weight: 800;
    font-size: 14px;
  }

  Then we added another selector to create a descendant combinator. If we only created a descendant combinator, the specificity would be tied with the
  div.text selector and it would come down to rule order, and if we only moved it, the div.text selector would still have a higher specificity.
  
  Another solution would be to keep the rule where it was and just replace the div selector with the .text selector:

  .text .child {
    color: rgb(0, 0, 0);
    font-weight: 800;
    font-size: 14px;
  }

*/



div.text {
  color: rgb(0, 0, 0);
  font-size: 22px;
  font-weight: 100;
}

div .child {
    color: rgb(0, 0, 0);
    font-weight: 800;
    font-size: 14px;
  }